@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using ReactOnlineActivity.Models;
@using ReactOnlineActivity.Services.Constants
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string returnUrl = null;
    var query = ViewContext.HttpContext.Request.Query;
    if (query.ContainsKey("returnUrl"))
    {
        returnUrl = query["returnUrl"];
    }
    ApplicationUser user = null;
    if (SignInManager.IsSignedIn(User))
    {
        user = await UserManager.FindByNameAsync(User.Identity.Name);
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name</a>
        </li>
        @if (user.PhotoUrl != null)
        {
            <li class="nav-item">
                <img src="@user.PhotoUrl"
                     style="border-radius: 50%;  width: 40px; height: 40px;" alt="@User.Identity.Name"/>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login"asp-route-returnUrl="@returnUrl">Login</a>
        </li>
    }
</ul>
